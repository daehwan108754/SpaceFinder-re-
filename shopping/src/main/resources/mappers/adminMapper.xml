<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shopping.mappers.adminMapper">
   
<!-- 카테고리 호출 -->
<select id="category" resultType="com.shopping.domain.CategoryVO">
 select
  level, cateName, cateCode, cateCodeRef
 from goods_category
     start with cateCodeRef is null connect by prior cateCode = cateCodeRef
</select>

<!-- 상품 등록 -->
<insert id="register">
 insert into tbl_goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes,
       gdsImg, gdsThumbImg)
     values (tbl_goods_seq.nextval, #{gdsName}, #{cateCode}, #{gdsPrice}, #{gdsStock}, #{gdsDes},
        #{gdsImg}, #{gdsThumbImg})
</insert>

<!-- 상품 목록 --> 
<select id="goodslist" resultType="com.shopping.domain.GoodsVO">
 select
  gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
    from tbl_goods
        order by gdsNum desc
</select>

<!-- 상품 조회 -->
<!-- <select id="goodsView" resultType="com.shopping.domain.GoodsVO">
 select gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
     from tbl_goods
         where gdsNum = #{gdsNum}
</select>
-->

 <!-- 상품 조회 + 카테고리 조인-->
<select id="goodsView" resultType="com.shopping.domain.GoodsViewVO">
 select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from tbl_goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode           
            where g.gdsNum = #{gdsNum}
</select>

<!-- 상품 수정 -->
<update id="goodsModify">
 update tbl_goods
     set
         gdsName = #{gdsName},
         cateCode = #{cateCode},
         gdsPrice = #{gdsPrice},
         gdsStock = #{gdsStock},
         gdsDes = #{gdsDes}
     where gdsNum = ${gdsNum}
</update>

<!-- 상품 삭제 -->
<delete id="goodsDelete">
 delete
 from  tbl_goods
 where gdsNum = #{gdsNum}
</delete>

<!-- 주차장 등록 -->
<insert id="GP_reg">
 insert into GoodPlace (GP_id, userId, GP_name, GP_lat, GP_long,
       GP_Runtime, GP_content, GP_restday, GP_parking)
     values (GoodPlace_seq.nextval, #{userId}, #{GP_name}, #{GP_lat}, #{GP_long},
        #{GP_Runtime}, #{GP_content}, #{GP_restday}, #{GP_parking})
</insert>

<!-- 주차장 목록 --> 
<select id="gplist" resultType="com.shopping.domain.GoodPVO">
 select
  GP_id, userId, GP_name, GP_lat, GP_long,
       GP_Runtime, GP_content, GP_image, GP_restday, GP_parking
    from GOODPLACE
        order by TO_NUMBER(GP_id) DESC
</select>


<!-- 굿플 조회 -->
<select id="gpView" resultType="com.shopping.domain.GpViewVO">
	select
g.GP_id, g.userId, g.GP_name, g.GP_lat, g.GP_long,
       g.GP_Runtime, g.GP_content, g.GP_image, g.GP_restday, g.GP_parking
         from GOODPLACE g
<!--              inner join goods_category c -->
<!--                  on g.cateCode = c.cateCode            -->
            where g.GP_id = #{GP_id}
</select>

<!-- 댓글 작성 -->
<insert id="registReply">
 insert into GP_reply (GP_id, userId, repNum, repCon)
     values (#{GP_id}, #{userId}, GP_reply_seq.nextval, #{repCon})
</insert>

<!-- 댓글 리스트 -->
<select id="replyList" resultType="com.shopping.domain.ReplyListVO">
 select
     r.GP_id, r.userId, r.repNum, r.repCon, r.repDate, m.userName
 from GP_reply r
     inner join tbl_member m
         on r.userId = m.userId
     where GP_id = #{GP_id}
</select>
</mapper>